#!/bin/bash
#
# Script Instalasi WordPress dengan Nginx dan PHP 8.3
# Dibuat oleh: Amirul Hendra Wicaksono
# Lisensi: MIT
#
# =======================================================
# Hak Cipta (C) 2024 Amirul Hendra Wicaksono
#
# Ini adalah skrip gratis: Anda dapat menyebarluaskannya dan/atau memodifikasinya
# di bawah ketentuan dari lisensi yang berlaku.
#
# Skrip ini disediakan tanpa jaminan apa pun.
# =======================================================

# Tampilan yang ditampilkan saat skrip dimulai
welcome_message() {
    clear
    echo -e "\e[1;32m=======================================================\e[0m"
    echo -e "\e[1;32m  Selamat Datang di Skrip Instalasi WordPress\e[0m"
    echo -e "\e[1;32m  Dibuat oleh: Amirul Hendra Wicaksono\e[0m"
    echo -e "\e[1;32m=======================================================\e[0m"
    echo
}

# Fungsi untuk menampilkan menu utama
show_menu() {
    welcome_message
    echo "Menu Utama:"
    echo "1. Install otomatis WordPress"
    echo "2. Pilihan instalasi manual untuk software"
    echo "3. Uninstall semua skrip yang dijalankan"
    echo "4. Tambahkan domain ke web"
    echo "5. Keluar"
    echo "============================================="
    read -p "Masukkan pilihan Anda [1-5]: " choice
    case $choice in
        1) install_wordpress ;;
        2) install_manual ;;
        3) uninstall_script ;;
        4) add_domain ;;
        5) exit ;;
        *) echo "Maaf, pilihan tidak valid"; show_menu ;;
    esac
}

# Fungsi untuk menghapus semua instalasi skrip
uninstall_script() {
    welcome_message
    echo -e "\e[1;91mMenghapus Semua Instalasi Skrip\e[0m"
    echo -e "\e[1;91m=======================================================\e[0m"
    echo
    echo "Anda yakin ingin menghapus semua instalasi skrip ini?"
    echo "Tindakan ini akan menghapus konfigurasi Nginx, database, dan file-file terkait."
    echo
    read -p "Tekan [Y/y] untuk melanjutkan atau [N/n] untuk membatalkan: " choice
    if [[ $choice =~ ^[Yy]$ ]]; then
        # Hapus konfigurasi Nginx
        rm -f /etc/nginx/sites-available/*
        rm -f /etc/nginx/sites-enabled/*

        # Hapus database yang telah dibuat
        mysql -u root -p"$MARIADB_ROOT_PASSWORD" <<EOF
        DROP DATABASE IF EXISTS ${DB_NAME};
        DROP USER IF EXISTS '${DB_USER}'@'localhost';
        FLUSH PRIVILEGES;
EOF

        # Hapus direktori dokumen root
        rm -rf /var/www/html/*

        echo -e "\e[1;92mSemua instalasi skrip telah dihapus.\e[0m"
    else
        echo -e "\e[1;92mPenghapusan instalasi skrip dibatalkan.\e[0m"
    fi
    echo
    read -p "Tekan [Enter] untuk kembali ke menu utama."
    show_menu
}

# Fungsi untuk instalasi manual software
install_manual() {
    welcome_message
    echo -e "\e[1;96mInstalasi Manual Software\e[0m"
    echo -e "\e[1;96m=======================================================\e[0m"
    echo
    echo "Silakan lakukan instalasi manual software yang Anda inginkan di sini."
    echo "Pastikan Anda memiliki pengetahuan yang cukup sebelum melanjutkan."
    echo
    echo "Contoh: apt-get install nama_paket"
    echo "Contoh: wget https://domain.com/paket.tar.gz && tar -xzvf paket.tar.gz && cd paket && ./install.sh"
    echo
    read -p "Tekan [Enter] untuk kembali ke menu utama."
    show_menu
}

# Fungsi untuk instalasi WordPress
install_wordpress() {
    welcome_message
    echo -e "\e[1;96mInstalasi WordPress dengan Nginx dan PHP 8.3\e[0m"
    echo -e "\e[1;96m=======================================================\e[0m"
    echo

    # Meminta input pengguna untuk nama domain, database, dll.
    read -p "Masukkan nama domain (contoh: example.com): " DOMAIN
    read -p "Masukkan nama database: " DB_NAME
    read -p "Masukkan nama pengguna database: " DB_USER
    read -sp "Masukkan password pengguna database: " DB_PASS
    echo
    read -sp "Masukkan password root MariaDB: " MARIADB_ROOT_PASSWORD
    echo
    read -p "Masukkan email untuk sertifikat SSL: " SSL_EMAIL

    DOC_ROOT="/var/www/html/$DOMAIN"
    NGINX_CONF="/etc/nginx/sites-available/$DOMAIN"
    NGINX_LINK="/etc/nginx/sites-enabled/$DOMAIN"

    # Tambahkan repositori PHP 8.3
    add-apt-repository -y ppa:ondrej/php
    apt-get update

    # Install Nginx, PHP 8.3 serta ekstensi yang diperlukan
    apt-get install -y nginx php8.3-fpm php8.3-mysql php8.3-curl php8.3-gd php8.3-mbstring php8.3-xml php8.3-xmlrpc php8.3-soap php8.3-intl php8.3-zip unzip

    # Periksa apakah MariaDB sudah terinstal
    if ! dpkg -l | grep -q mariadb-server; then
        echo -e "\e[1;93mMariaDB tidak ditemukan. Menginstal MariaDB...\e[0m"
        apt-get install -y mariadb-server
    else
        echo -e "\e[1;92mMariaDB sudah terinstal.\e[0m"
    fi

    # Konfigurasi MariaDB
    mysql -u root -p"$MARIADB_ROOT_PASSWORD" <<EOF
    CREATE DATABASE IF NOT EXISTS ${DB_NAME} DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    CREATE USER IF NOT EXISTS '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';
    GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';
    FLUSH PRIVILEGES;
EOF

    # Membuat direktori dokumen root
    mkdir -p $DOC_ROOT
    chown -R www-data:www-data $DOC_ROOT
    chmod -R 755 $DOC_ROOT

    # Membuat file konfigurasi Nginx
    cat <<EOL > $NGINX_CONF
server {
    listen 80;
    root $DOC_ROOT;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name $DOMAIN www.$DOMAIN;

    location / {
        try_files \$uri \$uri/ =404;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

    # Aktifkan konfigurasi Nginx
    ln -s $NGINX_CONF $NGINX_LINK
    nginx -t && systemctl reload nginx

    # Unduh WordPress
    echo -e "\e[1;96mMengunduh dan menginstal WordPress...\e[0m"
    wget https://wordpress.org/latest.tar.gz -O /tmp/latest.tar.gz
    tar -xzvf /tmp/latest.tar.gz -C /tmp/
    cp -r /tmp/wordpress/* $DOC_ROOT/
    rm /tmp/latest.tar.gz

    # Konfigurasi WordPress
    cp $DOC_ROOT/wp-config-sample.php $DOC_ROOT/wp-config.php
    sed -i "s/database_name_here/$DB_NAME/" $DOC_ROOT/wp-config.php
    sed -i "s/username_here/$DB_USER/" $DOC_ROOT/wp-config.php
    sed -i "s/password_here/$DB_PASS/" $DOC_ROOT/wp-config.php

    # Setel hak akses
    chown -R www-data:www-data $DOC_ROOT
    chmod -R 755 $DOC_ROOT

    # Instalasi Certbot untuk SSL
    apt-get install -y certbot python3-certbot-nginx

    # Memperoleh sertifikat SSL dari Let's Encrypt
    certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email $SSL_EMAIL

    # SKrip gratis mantap
