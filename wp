#!/bin/bash

# Function to colorize text
colorize() {
    local color=$1
    shift
    echo -e "\e[${color}m$@\e[0m"
}

# Function to print bold text
bold() {
    echo -e "\e[1m$@\e[0m"
}

# Function to print italic text
italic() {
    echo -e "\e[3m$@\e[0m"
}

# Menu 1: Instalasi WordPress
menu_install_wordpress() {
    bold "Instalasi WordPress dengan Nginx dan PHP 8.3"
    echo
    read -p "$(bold 'Masukkan nama domain (contoh: example.com): ')" DOMAIN
    read -p "$(bold 'Masukkan nama database: ')" DB_NAME
    read -p "$(bold 'Masukkan nama pengguna database: ')" DB_USER
    read -sp "$(bold 'Masukkan password pengguna database: ')" DB_PASS
    echo
    read -sp "$(bold 'Masukkan password root MariaDB: ')" MARIADB_ROOT_PASSWORD
    echo
    read -p "$(bold 'Masukkan email untuk sertifikat SSL: ')" SSL_EMAIL

    DOC_ROOT="/var/www/html/$DOMAIN"
    NGINX_CONF="/etc/nginx/sites-available/$DOMAIN"
    NGINX_LINK="/etc/nginx/sites-enabled/$DOMAIN"

    # Add PHP 8.3 repository and update
    add-apt-repository -y ppa:ondrej/php
    apt-get update

    # Install Nginx, PHP 8.3, and necessary extensions
    apt-get install -y nginx php8.3-fpm php8.3-mysql php8.3-curl php8.3-gd php8.3-mbstring php8.3-xml php8.3-xmlrpc php8.3-soap php8.3-intl php8.3-zip unzip

    # Check if MariaDB is installed
    if ! dpkg -l | grep -q mariadb-server; then
        echo "$(colorize 33 '[Info] MariaDB tidak ditemukan. Menginstal MariaDB...')"
        apt-get install -y mariadb-server
    else
        echo "$(colorize 32 '[Info] MariaDB sudah terinstal.')"
    fi

    # Configure MariaDB
    mysql -u root -p"$MARIADB_ROOT_PASSWORD" <<EOF
    CREATE DATABASE IF NOT EXISTS ${DB_NAME} DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    CREATE USER IF NOT EXISTS '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';
    GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';
    FLUSH PRIVILEGES;
EOF

    # Create document root directory
    mkdir -p $DOC_ROOT
    chown -R www-data:www-data $DOC_ROOT
    chmod -R 755 $DOC_ROOT

    # Create Nginx configuration file
    cat <<EOL > $NGINX_CONF
server {
    listen 80;
    root $DOC_ROOT;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name $DOMAIN www.$DOMAIN;

    location / {
        try_files \$uri \$uri/ =404;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

    # Enable Nginx configuration
    ln -s $NGINX_CONF $NGINX_LINK
    nginx -t && systemctl reload nginx

    # Download WordPress
    wget https://wordpress.org/latest.tar.gz -O /tmp/latest.tar.gz
    tar -xzvf /tmp/latest.tar.gz -C /tmp/
    cp -r /tmp/wordpress/* $DOC_ROOT/
    rm /tmp/latest.tar.gz

    # Configure WordPress
    cp $DOC_ROOT/wp-config-sample.php $DOC_ROOT/wp-config.php
    sed -i "s/database_name_here/$DB_NAME/" $DOC_ROOT/wp-config.php
    sed -i "s/username_here/$DB_USER/" $DOC_ROOT/wp-config.php
    sed -i "s/password_here/$DB_PASS/" $DOC_ROOT/wp-config.php

    # Set permissions
    chown -R www-data:www-data $DOC_ROOT
    chmod -R 755 $DOC_ROOT

    # Install Certbot for SSL
    apt-get install -y certbot python3-certbot-nginx

    # Obtain SSL certificate from Let's Encrypt
    certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email $SSL_EMAIL

    # Update Nginx configuration to use SSL
    cat <<EOL > $NGINX_CONF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    return 301 https://\$host\$request_uri;
}

server {
    listen 443 ssl;
    server_name $DOMAIN www.$DOMAIN;

    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root $DOC_ROOT;
    index index.php index.html index.htm index.nginx-debian.html;

    location / {
        try_files \$uri \$uri/ /index.php?\$args;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

    # Reload Nginx to apply changes
    nginx -t && systemctl reload nginx

    # Completion message
    echo "$(colorize 32 '[Success] Instalasi WordPress dengan Nginx dan PHP 8.3 selesai. Anda bisa mengakses situs Anda pada https://$DOMAIN')"
}

# Menu 2: Tambah Domain Baru
menu_add_domain() {
    bold "Tambah Domain Baru"
    echo
    read -p "$(bold 'Masukkan nama domain baru (contoh: newdomain.com): ')" NEW_DOMAIN
    read -p "$(bold 'Masukkan email untuk sertifikat SSL: ')" SSL_EMAIL

    NEW_DOC_ROOT="/var/www/html/$NEW_DOMAIN"
    NEW_NGINX_CONF="/etc/nginx/sites-available/$NEW_DOMAIN"
    read -p "$(bold 'Masukkan nama database: ')" NEW_DB_NAME
    read -p "$(bold 'Masukkan nama pengguna database: ')" NEW_DB_USER
    read -sp "$(bold 'Masukkan password pengguna database: ')" NEW_DB_PASS
    echo
    read -sp "$(bold 'Masukkan password root MariaDB: ')" NEW_MARIADB_ROOT_PASSWORD
    echo
    NEW_NGINX_LINK="/etc/nginx/sites-enabled/$NEW_DOMAIN"

    # Create document root directory for new domain
    mkdir -p $NEW_DOC_ROOT
    chown -R www-data:www-data $NEW_DOC_ROOT
    chmod -R 755 $NEW_DOC_ROOT

    # Create Nginx configuration file for new domain
    cat <<EOL > $NEW_NGINX_CONF
server {
    listen 80;
    root $NEW_DOC_ROOT;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name $NEW_DOMAIN www.$NEW_DOMAIN;

    location / {
        try_files \$uri \$uri/ =404;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

    # Enable Nginx configuration for new domain
    ln -s $NEW_NGINX_CONF $NEW_NGINX_LINK
    nginx -t && systemctl reload nginx
      
    # Enable Nginx configuration
    ln -s $NGINX_CONF $NEW_NGINX_LINK
    nginx -t && systemctl reload nginx

    # Pindah WordPress ke Domain Baru
    cp -r /tmp/wordpress/* $NEW_DOC_ROOT/

    # Configure WordPress
    cp $NEW_DOC_ROOT/wp-config-sample.php $NEW_DOC_ROOT/wp-config.php
    sed -i "s/database_name_here/$NEW_DB_NAME/" $NEW_DOC_ROOT/wp-config.php
    sed -i "s/username_here/$NEW_DB_USER/" $NEW_DOC_ROOT/wp-config.php
    sed -i "s/password_here/$NEW_DB_PASS/" $NEW_DOC_ROOT/wp-config.php

    # Install Certbot for SSL for new domain
    apt-get install -y certbot python3-certbot-nginx

    # Obtain SSL certificate from Let's Encrypt for new domain
    certbot --nginx -d $NEW_DOMAIN -d www.$NEW_DOMAIN --non-interactive --agree-tos --email $SSL_EMAIL

    # Completion message
    echo "$(colorize 32 '[Success] Penambahan domain baru selesai. Anda bisa mengakses situs baru Anda pada https://$NEW_DOMAIN')"
}

# Main menu selection
echo "Pilih menu yang ingin Anda jalankan:"
echo "1. Instalasi WordPress dengan Nginx dan PHP 8.3"
echo "2. Tambah Domain Baru"
read -p "Masukkan pilihan (1 atau 2): " MENU_CHOICE

case $MENU_CHOICE in
    1)
        menu_install_wordpress
        ;;
    2)
        menu_add_domain
        ;;
    *)
        echo "$(colorize 31 'Pilihan tidak valid. Harap pilih 1 atau 2.')"
        ;;
esac
